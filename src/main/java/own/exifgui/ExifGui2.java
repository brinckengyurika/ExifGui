/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package own.exifgui;

import java.io.File;
import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.List;
import java.util.ListIterator;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import java.awt.Canvas;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.image.BufferStrategy; 
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem;

import org.apache.commons.imaging.formats.tiff.TiffField;

/**
 *
 * @author satch
 */
public class ExifGui2 extends javax.swing.JFrame {

    /**
     * Creates new form ExifGui2
     */
    public ExifGui2() {
        initComponents();
        allSelectedImagePath = new Vector();
        this.Canvas4Image.createBufferStrategy(1);
        this.bufferStrategy = this.Canvas4Image.getBufferStrategy();
        this.graphics = bufferStrategy.getDrawGraphics();
        this.height = this.Canvas4Image.getHeight();
        this.width = this.Canvas4Image.getWidth();
        this.selectedImageIndex = -1;
        this.currentMetaData = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        ExitDialog = new javax.swing.JDialog();
        ExitjButton = new javax.swing.JButton();
        CanceljButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList4Places = new javax.swing.JList<>();
        jButtonAppendPlaceToSelected = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ImageExifsjList = new javax.swing.JList<>();
        jButtonAddNewPlace1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4ImageNames = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList4SelectedImageNames = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonAppendPlaceToSelected1 = new javax.swing.JButton();
        jButtonAppendPlaceToSelected2 = new javax.swing.JButton();
        Canvas4Image = new java.awt.Canvas();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList4Places1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonAddNewPlace2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        AbsolutePathjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        ExitjButton.setText("Exit");
        ExitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitjButtonActionPerformed(evt);
            }
        });

        CanceljButton.setText("Cancel");
        CanceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanceljButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ExitDialogLayout = new javax.swing.GroupLayout(ExitDialog.getContentPane());
        ExitDialog.getContentPane().setLayout(ExitDialogLayout);
        ExitDialogLayout.setHorizontalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExitDialogLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(CanceljButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExitDialogLayout.createSequentialGroup()
                .addContainerGap(299, Short.MAX_VALUE)
                .addComponent(ExitjButton)
                .addGap(29, 29, 29))
        );
        ExitDialogLayout.setVerticalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExitDialogLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(CanceljButton)
                .addGap(136, 136, 136)
                .addComponent(ExitjButton)
                .addGap(50, 50, 50))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jList4Places.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList4Places);

        jButtonAppendPlaceToSelected.setText("Append location to the selected images");

        jScrollPane3.setViewportView(ImageExifsjList);

        jButtonAddNewPlace1.setText("Add new Location");
        jButtonAddNewPlace1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewPlace1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Locations:");

        jLabel2.setText("Current Exif data:");

        jScrollPane4.setViewportView(jList4ImageNames);

        jList4SelectedImageNames.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList4SelectedImageNamesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList4SelectedImageNames);

        jButton1.setText("Remove from list");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonAppendPlaceToSelected1.setText("Up");
        jButtonAppendPlaceToSelected1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAppendPlaceToSelected1ActionPerformed(evt);
            }
        });

        jButtonAppendPlaceToSelected2.setText("Down");
        jButtonAppendPlaceToSelected2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAppendPlaceToSelected2ActionPerformed(evt);
            }
        });

        Canvas4Image.setBackground(new java.awt.Color(255, 255, 255));
        Canvas4Image.setPreferredSize(new java.awt.Dimension(110, 110));
        Canvas4Image.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                Canvas4ImageComponentResized(evt);
            }
        });

        jList4Places1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jList4Places1);

        jLabel3.setText("User comments:");

        jButtonAddNewPlace2.setText("Add new User comment");
        jButtonAddNewPlace2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewPlace2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Directory:");

        AbsolutePathjTextField.setEditable(false);

        jLabel5.setText("Selected files:");

        jMenuBar1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jMenuBar1ComponentResized(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu1MenuSelected(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Select directory");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(129, 129, 129)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAppendPlaceToSelected1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAppendPlaceToSelected2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AbsolutePathjTextField)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jButtonAppendPlaceToSelected))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Canvas4Image, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAddNewPlace2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonAddNewPlace1))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AbsolutePathjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Canvas4Image, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddNewPlace1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddNewPlace2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAppendPlaceToSelected1)
                        .addComponent(jButtonAppendPlaceToSelected2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButtonAppendPlaceToSelected)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddNewPlace1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewPlace1ActionPerformed
        AddNewLocation locationframe = new AddNewLocation();
        locationframe.pack();
        locationframe.setVisible(true);
    }//GEN-LAST:event_jButtonAddNewPlace1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu1MenuSelected
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu1MenuSelected

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int code = JOptionPane.showConfirmDialog(null, "Exit?", "Select", JOptionPane.YES_NO_OPTION);
        if (code == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String absolute_path;
        fileChooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
        this.fileChooser.setToolTipText("Only direcory is selectable.");
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            //textarea.read( new FileReader( file.getAbsolutePath() ), null );
            absolute_path = file.getAbsolutePath();
            Set<String> fileSet = new HashSet<>();
            String[] splitted_filename;
            String ext;
            String full_filepath;
            Vector<String> fileVector = new Vector();
            DefaultListModel listModel = new DefaultListModel();
            try (
                    DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(absolute_path))) {
                    for (Path path : stream) {
                        if (!Files.isDirectory(path)) {
                            splitted_filename = path.getFileName().toString().split("\\.");                            
                            if (splitted_filename.length == 2) {
                                ext = splitted_filename[1].trim();
                                if (ext.compareToIgnoreCase("jpg") == 0 || ext.compareToIgnoreCase("jpeg") == 0) {
                                    full_filepath = Path.of(absolute_path, path.getFileName().toString()).toString();
                                    fileSet.add(full_filepath);
                                    fileVector.add(full_filepath);
                                }
                            }
                        }
                    }
                    this.jList4ImageNames.setListData(fileVector);
                    this.AbsolutePathjTextField.setText(absolute_path);
            } catch (IOException ex) {
                Logger.getLogger(ExifGui2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }                
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ExitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitjButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitjButtonActionPerformed

    private void CanceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanceljButtonActionPerformed
        ExitDialog.setVisible(false);
    }//GEN-LAST:event_CanceljButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List <String> selected = this.jList4SelectedImageNames.getSelectedValuesList();
        ListIterator<String> li = selected.listIterator();
        String path;
        while(li.hasNext()) {
            path = li.next();
            this.allSelectedImagePath.remove(path);
        }
        this.jList4SelectedImageNames.setListData(this.allSelectedImagePath);       
    }//GEN-LAST:event_jButton1ActionPerformed

    public void LocadLocationList() {
        String filename = "Locations.txt";
        try {
            List<String> content = ExifUtil.readFileInList(filename);
            Iterator<String> lociter = content.iterator();
            String Location, locationName, Lat, Lon;
            while(lociter.hasNext()) {
                String splitted[] = lociter.next().split("\\.");
                Location =   splitted[0]
            }
        } catch (Exception e){
            e.printStackTrace();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        List <String> selected = this.jList4ImageNames.getSelectedValuesList();
        ListIterator<String> li = selected.listIterator();
        String path;
        while(li.hasNext()) {
            path = li.next();
            if (!this.allSelectedImagePath.contains(path)) {
                this.allSelectedImagePath.add(path);
            }
        }
        this.jList4SelectedImageNames.setListData(this.allSelectedImagePath);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void changeselectedAndShowImage() {
        int index = this.jList4SelectedImageNames.getSelectedIndex();
        if (!this.allSelectedImagePath.isEmpty() && index > -1) {
            String path = this.allSelectedImagePath.get(index);
            File file = new File(path);
            try {
                this.actualImage = ImageIO.read(file);
                if (this.actualImage != null) {
                    this.currentMetaData = ExifUtil.readExifdataHashMap(file);
                    Iterator <ImageMetadataItem> entry = this.currentMetaData.iterator();
                    Vector<String> newListitems = new Vector();
                    while (entry.hasNext()) {
                        newListitems.add(entry.next().toString());
                    }
                    this.ImageExifsjList.setListData(newListitems);                    
                    this.PaintToCanvas();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }        
        }
    }
    
    private void PaintToCanvas() {
        this.graphics.drawImage(this.actualImage, 0, 0, this.Canvas4Image.getWidth() , this.Canvas4Image.getHeight(),  this.Canvas4Image);
    }
    
    private void stepSelectedImage(int direction) {
        int uplimit = this.allSelectedImagePath.size();
        int lowlimit = 0;
        if (uplimit == lowlimit) {
            return;
        }
        int newvalue = this.selectedImageIndex + direction;
        if (newvalue < lowlimit) {
            newvalue = lowlimit;
        } else if (newvalue > uplimit -1 ) {
            newvalue = uplimit -1;
        } 
        if (this.selectedImageIndex == newvalue) {
            return;
        } else {
            this.selectedImageIndex = newvalue;
        }
        this.jList4SelectedImageNames.setSelectedIndex(this.selectedImageIndex);
        this.changeselectedAndShowImage();
    }
    
    private void jButtonAppendPlaceToSelected1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAppendPlaceToSelected1ActionPerformed
        this.stepSelectedImage(-1);
    }//GEN-LAST:event_jButtonAppendPlaceToSelected1ActionPerformed

    private void jButtonAppendPlaceToSelected2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAppendPlaceToSelected2ActionPerformed
        this.stepSelectedImage(1);
    }//GEN-LAST:event_jButtonAppendPlaceToSelected2ActionPerformed

    private void jList4SelectedImageNamesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList4SelectedImageNamesValueChanged
        this.changeselectedAndShowImage();
    }//GEN-LAST:event_jList4SelectedImageNamesValueChanged

    private void Canvas4ImageComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Canvas4ImageComponentResized
        
    }//GEN-LAST:event_Canvas4ImageComponentResized

    private void jMenuBar1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jMenuBar1ComponentResized
        this.PaintToCanvas();
    }//GEN-LAST:event_jMenuBar1ComponentResized

    private void jButtonAddNewPlace2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewPlace2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddNewPlace2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExifGui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExifGui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExifGui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExifGui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExifGui2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AbsolutePathjTextField;
    private javax.swing.JButton CanceljButton;
    private java.awt.Canvas Canvas4Image;
    private javax.swing.JDialog ExitDialog;
    private javax.swing.JButton ExitjButton;
    private javax.swing.JList<String> ImageExifsjList;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAddNewPlace1;
    private javax.swing.JButton jButtonAddNewPlace2;
    private javax.swing.JButton jButtonAppendPlaceToSelected;
    private javax.swing.JButton jButtonAppendPlaceToSelected1;
    private javax.swing.JButton jButtonAppendPlaceToSelected2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList4ImageNames;
    private javax.swing.JList<String> jList4Places;
    private javax.swing.JList<String> jList4Places1;
    private javax.swing.JList<String> jList4SelectedImageNames;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private Vector <String> allSelectedImagePath;
    private BufferStrategy bufferStrategy;
    private Graphics graphics;
    private int width, height;
    private BufferedImage actualImage;    
    private int selectedImageIndex;
    private List<ImageMetadataItem> currentMetaData;
    private Vector<String> locations_encoded;
    private Vector<String> usercomments_encoded;
}
